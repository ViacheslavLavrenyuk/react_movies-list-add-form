{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isInvalidImgUrl","isInvalidImdbUrl","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","pattern","newMovie","test","props","onAdd","this","onSubmit","htmlFor","onChange","id","required","type","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c2e5cfe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isInvalidImgUrl: false,\n    isInvalidImdbUrl: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      isInvalidImgUrl: false,\n      isInvalidImdbUrl: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    /* eslint-disable-next-line max-len */\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    let newMovie = {};\n\n    if (!pattern.test(imgUrl)) {\n      this.setState({\n        isInvalidImgUrl: true,\n      });\n    } else if (!pattern.test(imdbUrl)) {\n      this.setState({\n        isInvalidImdbUrl: true,\n      });\n    } else {\n      newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      this.props.onAdd(newMovie);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isInvalidImgUrl,\n      isInvalidImdbUrl } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label\n          className=\"newmovie__label\"\n          htmlFor=\"title\"\n        >\n          Title\n        </label>\n        <input\n          onChange={this.handleChange}\n          className=\"input newmovie__input\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          required\n        />\n        <label\n          className=\"newmovie__label\"\n          htmlFor=\"description\"\n        >\n          Description\n        </label>\n        <textarea\n          onChange={this.handleChange}\n          className=\"textarea newmovie__input\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n        />\n        <label\n          className=\"newmovie__label\"\n          htmlFor=\"imgUrl\"\n        >\n          Img Url\n        </label>\n        <input\n          onChange={this.handleChange}\n          className=\"input newmovie__input\"\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          required\n        />\n        {isInvalidImgUrl\n          && (\n            <p className=\"newmovie__error-url\">\n              Please, enter a valid URL\n            </p>\n          )}\n        <label\n          className=\"newmovie__label\"\n          htmlFor=\"imdbUrl\"\n        >\n          Imdb Url\n        </label>\n        <input\n          onChange={this.handleChange}\n          className=\"input newmovie__input\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          required\n        />\n        {isInvalidImdbUrl\n          && (\n            <p className=\"newmovie__error-url\">\n              Please, enter a valid URL\n            </p>\n          )}\n        <label\n          className=\"newmovie__label\"\n          htmlFor=\"imdbId\"\n        >\n          Imdb Id\n        </label>\n        <input\n          onChange={this.handleChange}\n          className=\"input newmovie__input\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          required\n        />\n        <button\n          className=\"button newmovie__button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}